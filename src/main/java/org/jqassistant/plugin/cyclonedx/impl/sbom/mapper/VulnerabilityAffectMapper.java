package org.jqassistant.plugin.cyclonedx.impl.sbom.mapper;

import com.buschmais.jqassistant.core.scanner.api.Scanner;

import org.cyclonedx.model.vulnerability.Vulnerability;
import org.jqassistant.plugin.cyclonedx.api.model.sbom.ComponentDescriptor;
import org.jqassistant.plugin.cyclonedx.api.model.sbom.VulnerabilityAffectDescriptor;
import org.jqassistant.plugin.cyclonedx.impl.mapper.DescriptorMapper;
import org.mapstruct.*;

@Mapper(uses = { VulnerabilityVersionMapper.class })
public interface VulnerabilityAffectMapper extends DescriptorMapper<Vulnerability.Affect, VulnerabilityAffectDescriptor> {

    @Override
    @Mapping(target = "component", ignore = true)
    @BeanMapping(ignoreUnmappedSourceProperties = { "ref" })
    VulnerabilityAffectDescriptor toDescriptor(Vulnerability.Affect value, @Context Scanner scanner);

    @BeforeMapping
    default void setComponent(Vulnerability.Affect value, @MappingTarget VulnerabilityAffectDescriptor vulnerabilityAffectDescriptor,
        @Context Scanner scanner) {
        ComponentDescriptor component = scanner.getContext()
            .peek(BomRefResolver.class)
            .resolve(value.getRef(), ComponentDescriptor.class, scanner.getContext());
        vulnerabilityAffectDescriptor.setComponent(component);
    }
}
