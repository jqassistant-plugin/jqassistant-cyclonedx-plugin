package org.jqassistant.plugin.cyclonedx.impl.sbom.xml.mapper;

import java.util.Map;

import com.buschmais.jqassistant.core.scanner.api.Scanner;

import org.jqassistant.plugin.cyclonedx.api.model.sbom.VulnerabilitySourceDescriptor;
import org.jqassistant.plugin.cyclonedx.generated.bom.xml.VulnerabilitySourceType;
import org.jqassistant.plugin.cyclonedx.impl.mapper.DescriptorMapper;
import org.mapstruct.*;

import static java.util.stream.Collectors.toMap;

@Mapper
public interface VulnerabilitySourceMapper extends DescriptorMapper<VulnerabilitySourceType, VulnerabilitySourceDescriptor> {

    @Override
    @Mapping(target = "name", ignore = true)
    @Mapping(target = "url", ignore = true)
    @BeanMapping(ignoreUnmappedSourceProperties = "nameAndUrl")
    VulnerabilitySourceDescriptor toDescriptor(VulnerabilitySourceType value, @Context Scanner scanner);

    @AfterMapping
    default void setNameAndUrl(VulnerabilitySourceType value, @MappingTarget VulnerabilitySourceDescriptor descriptor) {
        Map<String, String> nameAndValue = value.getNameAndUrl()
            .stream()
            .collect(toMap(e -> e.getName()
                .getLocalPart(), e -> e.getValue()));
        descriptor.setName(nameAndValue.get("name"));
        descriptor.setUrl(nameAndValue.get("url"));
    }
}
